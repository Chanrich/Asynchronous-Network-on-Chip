Test Bench explanation,

In our testbench module, we initialize a random generator that will always generate different starting address to completely random destination and data. The starting address generated by the generator will be used as a control to a spilt unit connecting to the generator. The split then initiate a send signal on the starting address provided by random generator. The signal goes into our top module and the result will be picked up by an array of data buckets that has built in counting mechnism for final output checks.

In our tb module, there are also two queues to store values we sent through data generator and data we received from data buckets. A wait statement blocks the initial block until all tokens are received by data buckets. The result queue will collect all tokens received by data buckets and compare it against the original queue that stores all tokens from the random generator. The comparison is done by popping out one element at a time. If we found a match, we will remove the matching element in the original queue. At the end, if all matches, we will end up with an empty original queue and it will proves our modules works.